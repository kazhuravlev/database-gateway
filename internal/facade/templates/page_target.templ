package templates

import (
	"github.com/kazhuravlev/database-gateway/internal/structs"
)

templ sqlForm(formUrl, query string) {
	<div class="w-full">
		<form action={templ.SafeURL(formUrl)} method="post" id="myForm" style="margin:0">
			<div class="flex flex-col items-start gap-1">
				<textarea id="textInput" name="query" placeholder="select col1, col2 from some_table limit 1" class="w-full p-1 h-24 border border-2 border-orange-400 text-neutral-900">{ query }</textarea>
				<div class="flex flex-row items-start gap-2">
					<div>
						<button type="submit" name="format" value="html" id="submit" class="bg-orange-500 text-neutral-900 rounded-sm hover:bg-orange-600 px-2 py-1">Run (Shift + Enter)</button>
					</div>
					<div>
						<button type="submit" name="format" value="json" class="bg-orange-500 text-neutral-900 rounded-sm hover:bg-orange-600 px-2 py-1">Get JSON</button>
					</div>
				</div>
			</div>
		</form>
		<script type="text/javascript">
  		  (() => {
  				document.getElementById('textInput').addEventListener('keydown', function(event) {
  		      // Check if Shift + Enter keys are pressed
  		      if (event.key === 'Enter' && event.shiftKey) {
  		        event.preventDefault(); // Prevent new line in the textarea

  						document.getElementById('submit').click()
  		      }
  		    });
        })()
      </script>
	</div>
}

templ queryResult(tbl structs.QTable) {
	<div class="w-full">
		@smallQueryResult(tbl)
	</div>
}

templ smallQueryResult(tbl structs.QTable) {
	<div class="w-full overflow-x-auto shadow-md rounded-lg">
		<div class="inline-block min-w-full align-middle">
			<div class="overflow-hidden">
				<table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
					<thead class="bg-gray-50 dark:bg-gray-800 sticky top-0 z-10">
						<tr>
							for _, hdr := range tbl.Headers {
								<th scope="col" class="px-3 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider whitespace-nowrap">
									{ hdr }
								</th>
							}
						</tr>
					</thead>
					<tbody class="bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700">
						for i, row := range tbl.Rows {
							<tr class={ templ.KV("bg-gray-50 dark:bg-gray-800", i%2 == 1), "hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-150" }>
								for _, cell := range row {
									<td class="px-3 py-2 text-sm text-gray-900 dark:text-gray-300">
										<div class="max-w-xs overflow-hidden text-ellipsis" title={ cell }>
											{ cell }
										</div>
									</td>
								}
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
		if len(tbl.Rows) > 0 {
			<div class="bg-gray-50 dark:bg-gray-800 px-3 py-2 border-t border-gray-200 dark:border-gray-700">
				<p class="text-sm text-gray-700 dark:text-gray-300">
					Showing { len(tbl.Rows) } rows
				</p>
			</div>
		}
	</div>
}

templ PageTarget(user structs.User, target structs.Server, formUrl,query string, qTbl *structs.QTable, err error) {
	@l_app() {
		@header(user)
		@w_appline() {
			@targetLine(target)
		}
		@w_appline() {
			@sqlForm(formUrl,query)
		}
		if err != nil {
			@showError(err)
		}
		if qTbl != nil {
			@queryResult(*qTbl)
		}
	}
}
