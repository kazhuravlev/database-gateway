// Code generated by options-gen v0.49.0. DO NOT EDIT.

package migrator

import (
	"database/sql"
	"embed"
	fmt461e464ebed9 "fmt"

	errors461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/errors"
	validator461e464ebed9 "github.com/kazhuravlev/options-gen/pkg/validator"
)

type OptOptionsSetter func(o *Options)

func NewOptions(
	migrationsFs embed.FS,
	migrationsTableName string,
	migrationsDir string,
	db *sql.DB,
	options ...OptOptionsSetter,
) Options {
	var o Options

	// Setting defaults from field tag (if present)

	o.migrationsFs = migrationsFs
	o.migrationsTableName = migrationsTableName
	o.migrationsDir = migrationsDir
	o.db = db

	for _, opt := range options {
		opt(&o)
	}
	return o
}

func (o *Options) Validate() error {
	errs := new(errors461e464ebed9.ValidationErrors)
	errs.Add(errors461e464ebed9.NewValidationError("migrationsFs", _validate_Options_migrationsFs(o)))
	errs.Add(errors461e464ebed9.NewValidationError("migrationsTableName", _validate_Options_migrationsTableName(o)))
	errs.Add(errors461e464ebed9.NewValidationError("migrationsDir", _validate_Options_migrationsDir(o)))
	errs.Add(errors461e464ebed9.NewValidationError("db", _validate_Options_db(o)))
	return errs.AsError()
}

func _validate_Options_migrationsFs(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.migrationsFs, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `migrationsFs` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_migrationsTableName(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.migrationsTableName, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `migrationsTableName` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_migrationsDir(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.migrationsDir, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `migrationsDir` did not pass the test: %w", err)
	}
	return nil
}

func _validate_Options_db(o *Options) error {
	if err := validator461e464ebed9.GetValidatorFor(o).Var(o.db, "required"); err != nil {
		return fmt461e464ebed9.Errorf("field `db` did not pass the test: %w", err)
	}
	return nil
}
